{"cells":[{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","# Minisom library and module is used for performing Self Organizing Maps\n","from minisom import MiniSom"],"metadata":{"id":"PabdGcMIPAJm","executionInfo":{"status":"ok","timestamp":1698764165882,"user_tz":-330,"elapsed":1,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# to suppress warnings\n","from warnings import filterwarnings\n","filterwarnings('ignore')\n"],"metadata":{"id":"r9zkIR5HPEYa","executionInfo":{"status":"ok","timestamp":1698764184418,"user_tz":-330,"elapsed":670,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# Loading Data\n","data = pd.read_csv('Credit_Card_Applications.csv')"],"metadata":{"id":"GuyZ8l3iPIXv","executionInfo":{"status":"ok","timestamp":1698764205769,"user_tz":-330,"elapsed":2,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# X\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"z-UZ8lkrPNXs","executionInfo":{"status":"ok","timestamp":1698764222629,"user_tz":-330,"elapsed":1127,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"ed15cc9d-f945-4e1e-9571-695626f622ff"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     CustomerID  A1     A2      A3  A4  A5  A6     A7  A8  A9  A10  A11  A12  \\\n","0      15776156   1  22.08  11.460   2   4   4  1.585   0   0    0    1    2   \n","1      15739548   0  22.67   7.000   2   8   4  0.165   0   0    0    0    2   \n","2      15662854   0  29.58   1.750   1   4   4  1.250   0   0    0    1    2   \n","3      15687688   0  21.67  11.500   1   5   3  0.000   1   1   11    1    2   \n","4      15715750   1  20.17   8.170   2   6   4  1.960   1   1   14    0    2   \n","..          ...  ..    ...     ...  ..  ..  ..    ...  ..  ..  ...  ...  ...   \n","685    15808223   1  31.57  10.500   2  14   4  6.500   1   0    0    0    2   \n","686    15769980   1  20.67   0.415   2   8   4  0.125   0   0    0    0    2   \n","687    15675450   0  18.83   9.540   2   6   4  0.085   1   0    0    0    2   \n","688    15776494   0  27.42  14.500   2  14   8  3.085   1   1    1    0    2   \n","689    15592412   1  41.00   0.040   2  10   4  0.040   0   1    1    0    1   \n","\n","     A13   A14  Class  \n","0    100  1213      0  \n","1    160     1      0  \n","2    280     1      0  \n","3      0     1      1  \n","4     60   159      1  \n","..   ...   ...    ...  \n","685    0     1      1  \n","686    0    45      0  \n","687  100     1      1  \n","688  120    12      1  \n","689  560     1      1  \n","\n","[690 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-5daf375f-8091-490f-9c3b-f0589c3ab170\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>A1</th>\n","      <th>A2</th>\n","      <th>A3</th>\n","      <th>A4</th>\n","      <th>A5</th>\n","      <th>A6</th>\n","      <th>A7</th>\n","      <th>A8</th>\n","      <th>A9</th>\n","      <th>A10</th>\n","      <th>A11</th>\n","      <th>A12</th>\n","      <th>A13</th>\n","      <th>A14</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15776156</td>\n","      <td>1</td>\n","      <td>22.08</td>\n","      <td>11.460</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1.585</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>100</td>\n","      <td>1213</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15739548</td>\n","      <td>0</td>\n","      <td>22.67</td>\n","      <td>7.000</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>0.165</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>160</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15662854</td>\n","      <td>0</td>\n","      <td>29.58</td>\n","      <td>1.750</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1.250</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>280</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>15687688</td>\n","      <td>0</td>\n","      <td>21.67</td>\n","      <td>11.500</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0.000</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15715750</td>\n","      <td>1</td>\n","      <td>20.17</td>\n","      <td>8.170</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>1.960</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>60</td>\n","      <td>159</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>685</th>\n","      <td>15808223</td>\n","      <td>1</td>\n","      <td>31.57</td>\n","      <td>10.500</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>6.500</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>686</th>\n","      <td>15769980</td>\n","      <td>1</td>\n","      <td>20.67</td>\n","      <td>0.415</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>0.125</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>687</th>\n","      <td>15675450</td>\n","      <td>0</td>\n","      <td>18.83</td>\n","      <td>9.540</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>0.085</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>100</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>688</th>\n","      <td>15776494</td>\n","      <td>0</td>\n","      <td>27.42</td>\n","      <td>14.500</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>8</td>\n","      <td>3.085</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>120</td>\n","      <td>12</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>689</th>\n","      <td>15592412</td>\n","      <td>1</td>\n","      <td>41.00</td>\n","      <td>0.040</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>0.040</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>560</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>690 rows Ã— 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5daf375f-8091-490f-9c3b-f0589c3ab170')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5daf375f-8091-490f-9c3b-f0589c3ab170 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5daf375f-8091-490f-9c3b-f0589c3ab170');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d5b8e9d2-32fd-4c7b-8ada-0aea1e4b7e3a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5b8e9d2-32fd-4c7b-8ada-0aea1e4b7e3a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d5b8e9d2-32fd-4c7b-8ada-0aea1e4b7e3a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Shape of the data:\n","data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sBX3aFLFPR-0","executionInfo":{"status":"ok","timestamp":1698764238942,"user_tz":-330,"elapsed":781,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"18b245ec-c6a5-4e5e-cb8b-6c13af1a55a1"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(690, 16)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Info of the data:\n","data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zf7llSngPVKl","executionInfo":{"status":"ok","timestamp":1698764255446,"user_tz":-330,"elapsed":563,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"946a93da-b712-4546-a655-965c48cd34bd"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 690 entries, 0 to 689\n","Data columns (total 16 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   CustomerID  690 non-null    int64  \n"," 1   A1          690 non-null    int64  \n"," 2   A2          690 non-null    float64\n"," 3   A3          690 non-null    float64\n"," 4   A4          690 non-null    int64  \n"," 5   A5          690 non-null    int64  \n"," 6   A6          690 non-null    int64  \n"," 7   A7          690 non-null    float64\n"," 8   A8          690 non-null    int64  \n"," 9   A9          690 non-null    int64  \n"," 10  A10         690 non-null    int64  \n"," 11  A11         690 non-null    int64  \n"," 12  A12         690 non-null    int64  \n"," 13  A13         690 non-null    int64  \n"," 14  A14         690 non-null    int64  \n"," 15  Class       690 non-null    int64  \n","dtypes: float64(3), int64(13)\n","memory usage: 86.4 KB\n"]}]},{"cell_type":"code","source":["# Defining X variables for the input of SOM\n","\n","X = data.iloc[:, 1:14].values\n","y = data.iloc[:, -1].values"],"metadata":{"id":"SHknM4nSPY5Z","executionInfo":{"status":"ok","timestamp":1698764267951,"user_tz":-330,"elapsed":2,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# X variables:\n","pd.DataFrame(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"jnJWoqWSPcSF","executionInfo":{"status":"ok","timestamp":1698764281410,"user_tz":-330,"elapsed":597,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"04baa2ba-3bc8-444c-d864-a69fb0dc02fb"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0      1       2    3     4    5      6    7    8     9    10   11  \\\n","0    1.0  22.08  11.460  2.0   4.0  4.0  1.585  0.0  0.0   0.0  1.0  2.0   \n","1    0.0  22.67   7.000  2.0   8.0  4.0  0.165  0.0  0.0   0.0  0.0  2.0   \n","2    0.0  29.58   1.750  1.0   4.0  4.0  1.250  0.0  0.0   0.0  1.0  2.0   \n","3    0.0  21.67  11.500  1.0   5.0  3.0  0.000  1.0  1.0  11.0  1.0  2.0   \n","4    1.0  20.17   8.170  2.0   6.0  4.0  1.960  1.0  1.0  14.0  0.0  2.0   \n","..   ...    ...     ...  ...   ...  ...    ...  ...  ...   ...  ...  ...   \n","685  1.0  31.57  10.500  2.0  14.0  4.0  6.500  1.0  0.0   0.0  0.0  2.0   \n","686  1.0  20.67   0.415  2.0   8.0  4.0  0.125  0.0  0.0   0.0  0.0  2.0   \n","687  0.0  18.83   9.540  2.0   6.0  4.0  0.085  1.0  0.0   0.0  0.0  2.0   \n","688  0.0  27.42  14.500  2.0  14.0  8.0  3.085  1.0  1.0   1.0  0.0  2.0   \n","689  1.0  41.00   0.040  2.0  10.0  4.0  0.040  0.0  1.0   1.0  0.0  1.0   \n","\n","        12  \n","0    100.0  \n","1    160.0  \n","2    280.0  \n","3      0.0  \n","4     60.0  \n","..     ...  \n","685    0.0  \n","686    0.0  \n","687  100.0  \n","688  120.0  \n","689  560.0  \n","\n","[690 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-9ac4380d-d76b-4daa-8626-c0b554e3be50\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>22.08</td>\n","      <td>11.460</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>1.585</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>22.67</td>\n","      <td>7.000</td>\n","      <td>2.0</td>\n","      <td>8.0</td>\n","      <td>4.0</td>\n","      <td>0.165</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>160.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>29.58</td>\n","      <td>1.750</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>1.250</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>280.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>21.67</td>\n","      <td>11.500</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>0.000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>11.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>20.17</td>\n","      <td>8.170</td>\n","      <td>2.0</td>\n","      <td>6.0</td>\n","      <td>4.0</td>\n","      <td>1.960</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>14.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>60.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>685</th>\n","      <td>1.0</td>\n","      <td>31.57</td>\n","      <td>10.500</td>\n","      <td>2.0</td>\n","      <td>14.0</td>\n","      <td>4.0</td>\n","      <td>6.500</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>686</th>\n","      <td>1.0</td>\n","      <td>20.67</td>\n","      <td>0.415</td>\n","      <td>2.0</td>\n","      <td>8.0</td>\n","      <td>4.0</td>\n","      <td>0.125</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>687</th>\n","      <td>0.0</td>\n","      <td>18.83</td>\n","      <td>9.540</td>\n","      <td>2.0</td>\n","      <td>6.0</td>\n","      <td>4.0</td>\n","      <td>0.085</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>688</th>\n","      <td>0.0</td>\n","      <td>27.42</td>\n","      <td>14.500</td>\n","      <td>2.0</td>\n","      <td>14.0</td>\n","      <td>8.0</td>\n","      <td>3.085</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>120.0</td>\n","    </tr>\n","    <tr>\n","      <th>689</th>\n","      <td>1.0</td>\n","      <td>41.00</td>\n","      <td>0.040</td>\n","      <td>2.0</td>\n","      <td>10.0</td>\n","      <td>4.0</td>\n","      <td>0.040</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>560.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>690 rows Ã— 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ac4380d-d76b-4daa-8626-c0b554e3be50')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9ac4380d-d76b-4daa-8626-c0b554e3be50 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9ac4380d-d76b-4daa-8626-c0b554e3be50');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c5017d6-1f5c-4ff2-b58a-68848eeb2d8f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c5017d6-1f5c-4ff2-b58a-68848eeb2d8f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c5017d6-1f5c-4ff2-b58a-68848eeb2d8f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Y variables:\n","pd.DataFrame(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"WCDNrbeTPfhO","executionInfo":{"status":"ok","timestamp":1698764298856,"user_tz":-330,"elapsed":555,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"ef87df49-8ac5-4435-ace7-fa2ca6e51056"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     0\n","0    0\n","1    0\n","2    0\n","3    1\n","4    1\n","..  ..\n","685  1\n","686  0\n","687  1\n","688  1\n","689  1\n","\n","[690 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-f9270040-2a89-48a7-a73b-58b682f19abc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>685</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>686</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>687</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>688</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>689</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>690 rows Ã— 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9270040-2a89-48a7-a73b-58b682f19abc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9270040-2a89-48a7-a73b-58b682f19abc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9270040-2a89-48a7-a73b-58b682f19abc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2db2121c-c1e7-45e9-bd8b-90e7cde73509\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2db2121c-c1e7-45e9-bd8b-90e7cde73509')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2db2121c-c1e7-45e9-bd8b-90e7cde73509 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","sc = MinMaxScaler(feature_range = (0, 1))\n","X = sc.fit_transform(X)"],"metadata":{"id":"aFnldWIBPjyj","executionInfo":{"status":"ok","timestamp":1698764319083,"user_tz":-330,"elapsed":966,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["pd.DataFrame(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"9JZhQrLWPmww","executionInfo":{"status":"ok","timestamp":1698764323854,"user_tz":-330,"elapsed":380,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"1c046061-aab7-40fe-c2c9-71a054664238"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0         1         2    3         4      5         6    7    8   \\\n","0    1.0  0.125263  0.409286  0.5  0.230769  0.375  0.055614  0.0  0.0   \n","1    0.0  0.134135  0.250000  0.5  0.538462  0.375  0.005789  0.0  0.0   \n","2    0.0  0.238045  0.062500  0.0  0.230769  0.375  0.043860  0.0  0.0   \n","3    0.0  0.119098  0.410714  0.0  0.307692  0.250  0.000000  1.0  1.0   \n","4    1.0  0.096541  0.291786  0.5  0.384615  0.375  0.068772  1.0  1.0   \n","..   ...       ...       ...  ...       ...    ...       ...  ...  ...   \n","685  1.0  0.267970  0.375000  0.5  1.000000  0.375  0.228070  1.0  0.0   \n","686  1.0  0.104060  0.014821  0.5  0.538462  0.375  0.004386  0.0  0.0   \n","687  0.0  0.076391  0.340714  0.5  0.384615  0.375  0.002982  1.0  0.0   \n","688  0.0  0.205564  0.517857  0.5  1.000000  0.875  0.108246  1.0  1.0   \n","689  1.0  0.409774  0.001429  0.5  0.692308  0.375  0.001404  0.0  1.0   \n","\n","           9    10   11    12  \n","0    0.000000  1.0  0.5  0.05  \n","1    0.000000  0.0  0.5  0.08  \n","2    0.000000  1.0  0.5  0.14  \n","3    0.164179  1.0  0.5  0.00  \n","4    0.208955  0.0  0.5  0.03  \n","..        ...  ...  ...   ...  \n","685  0.000000  0.0  0.5  0.00  \n","686  0.000000  0.0  0.5  0.00  \n","687  0.000000  0.0  0.5  0.05  \n","688  0.014925  0.0  0.5  0.06  \n","689  0.014925  0.0  0.0  0.28  \n","\n","[690 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-c4bfe0b0-10ca-4813-9927-a8f0735d8305\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>0.125263</td>\n","      <td>0.409286</td>\n","      <td>0.5</td>\n","      <td>0.230769</td>\n","      <td>0.375</td>\n","      <td>0.055614</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>0.05</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>0.134135</td>\n","      <td>0.250000</td>\n","      <td>0.5</td>\n","      <td>0.538462</td>\n","      <td>0.375</td>\n","      <td>0.005789</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.08</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.238045</td>\n","      <td>0.062500</td>\n","      <td>0.0</td>\n","      <td>0.230769</td>\n","      <td>0.375</td>\n","      <td>0.043860</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>0.14</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>0.119098</td>\n","      <td>0.410714</td>\n","      <td>0.0</td>\n","      <td>0.307692</td>\n","      <td>0.250</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.164179</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>0.096541</td>\n","      <td>0.291786</td>\n","      <td>0.5</td>\n","      <td>0.384615</td>\n","      <td>0.375</td>\n","      <td>0.068772</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.208955</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.03</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>685</th>\n","      <td>1.0</td>\n","      <td>0.267970</td>\n","      <td>0.375000</td>\n","      <td>0.5</td>\n","      <td>1.000000</td>\n","      <td>0.375</td>\n","      <td>0.228070</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>686</th>\n","      <td>1.0</td>\n","      <td>0.104060</td>\n","      <td>0.014821</td>\n","      <td>0.5</td>\n","      <td>0.538462</td>\n","      <td>0.375</td>\n","      <td>0.004386</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>687</th>\n","      <td>0.0</td>\n","      <td>0.076391</td>\n","      <td>0.340714</td>\n","      <td>0.5</td>\n","      <td>0.384615</td>\n","      <td>0.375</td>\n","      <td>0.002982</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.05</td>\n","    </tr>\n","    <tr>\n","      <th>688</th>\n","      <td>0.0</td>\n","      <td>0.205564</td>\n","      <td>0.517857</td>\n","      <td>0.5</td>\n","      <td>1.000000</td>\n","      <td>0.875</td>\n","      <td>0.108246</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.014925</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.06</td>\n","    </tr>\n","    <tr>\n","      <th>689</th>\n","      <td>1.0</td>\n","      <td>0.409774</td>\n","      <td>0.001429</td>\n","      <td>0.5</td>\n","      <td>0.692308</td>\n","      <td>0.375</td>\n","      <td>0.001404</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.014925</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.28</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>690 rows Ã— 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4bfe0b0-10ca-4813-9927-a8f0735d8305')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c4bfe0b0-10ca-4813-9927-a8f0735d8305 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c4bfe0b0-10ca-4813-9927-a8f0735d8305');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-636589e0-9577-4b43-ab6a-0210eba1f15d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-636589e0-9577-4b43-ab6a-0210eba1f15d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-636589e0-9577-4b43-ab6a-0210eba1f15d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Set the hyper parameters\n","som_grid_rows = 10\n","som_grid_columns = 10\n","iterations = 20000\n","sigma = 1\n","learning_rate = 0.5"],"metadata":{"id":"qoXln_UPPxHa","executionInfo":{"status":"ok","timestamp":1698764365765,"user_tz":-330,"elapsed":479,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["# define SOM:\n","som = MiniSom(x = som_grid_rows, y = som_grid_columns, input_len=13, sigma=sigma, learning_rate=learning_rate)\n","\n","# Initializing the weights\n","som.random_weights_init(X)\n","\n","# Training\n","som.train_random(X, iterations)"],"metadata":{"id":"8_jIx2SvP0OM","executionInfo":{"status":"ok","timestamp":1698764380252,"user_tz":-330,"elapsed":2159,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# Returns the distance map from the weights:\n","som.distance_map()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YMbgZllfQBJY","executionInfo":{"status":"ok","timestamp":1698764431807,"user_tz":-330,"elapsed":401,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"f9846373-8368-46b6-8c4d-d50ce3b44fb7"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.19111502, 0.30503735, 0.37703575, 0.4413236 , 0.73562077,\n","        0.40961143, 0.45399214, 0.4681166 , 0.40026751, 0.244032  ],\n","       [0.34190554, 0.64494967, 0.458849  , 0.85335201, 0.80027136,\n","        0.70660492, 0.64397507, 0.73006794, 0.78967544, 0.33632258],\n","       [0.3398724 , 0.59568518, 0.68529303, 0.62536125, 0.90941421,\n","        0.83423193, 0.73543697, 0.8996206 , 0.70774153, 0.50093251],\n","       [0.39464366, 0.64772511, 0.7405732 , 0.72828224, 0.64887076,\n","        0.78778383, 0.76100523, 0.89271167, 0.95144141, 0.59923774],\n","       [0.34920888, 0.71855921, 0.73284457, 0.75633102, 0.8525567 ,\n","        0.81082405, 0.77231707, 0.78566179, 0.98327978, 0.57445781],\n","       [0.29653164, 0.60509349, 0.78960963, 0.66683368, 0.75252817,\n","        1.        , 0.88872927, 0.89516637, 0.62346908, 0.46112535],\n","       [0.48101076, 0.78008058, 0.81182043, 0.66960124, 0.63507876,\n","        0.7460629 , 0.85375978, 0.72735684, 0.83235367, 0.43653   ],\n","       [0.54103826, 0.74526431, 0.82597686, 0.64610235, 0.76316131,\n","        0.59509726, 0.70198992, 0.73556274, 0.87655665, 0.47067154],\n","       [0.38693004, 0.58820676, 0.58206418, 0.70202685, 0.63146919,\n","        0.6484018 , 0.55681529, 0.54971071, 0.65525971, 0.56288069],\n","       [0.19993828, 0.42474184, 0.33415278, 0.35165404, 0.46894368,\n","        0.301022  , 0.30845548, 0.4076809 , 0.4290386 , 0.31375606]])"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["from pylab import plot, axis, show, pcolor, colorbar, bone\n","bone()\n","pcolor(som.distance_map().T) # Distance map as background\n","colorbar()\n","show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":435},"id":"wa2q1vZAQEfX","executionInfo":{"status":"ok","timestamp":1698764446931,"user_tz":-330,"elapsed":1186,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"d767fd61-95b3-4264-c676-3e29c660bbfc"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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AQAAJsTTsALJAQAAJsRTcsCcAwAAYEDlAAAAE+KpckByAACACfGUHDCsAAAADKgcAABgQjxt2UxyAACACQwrAACAuEVyAACAKd5/bL7Ul6a+VQ5WrFih3NxcpaSkqKioSM3NzUHPP3TokMrLy5WZmSm73a7vfOc7evnll0Pqk2EFAABMsGJTxnXr1snlcqmurk5FRUWqra1VSUmJdu7cqdGjR590fm9vr77//e9r9OjR+u1vf6vs7Gzt3btXp5xySkj9khwAADCAurq6DI/tdrvsdrvfc2tqajR//nyVlZVJkurq6rRhwwatXr1aixcvPun81atX69NPP9Wbb76pQYMGSZJyc3NDjpFhBQAATDheOfCG0Y6/Tk5OjtLS0nyturrab3+9vb1qaWmR0+n0HUtMTJTT6VRTU5Pfa1566SUVFxervLxc6enpmjRpkpYtWya32x3Se6VyAACACZFaytjW1iaHw+E7HqhqcPDgQbndbqWnpxuOp6ena8eOHX6v+eijj/Tqq69q7ty5evnll7V7927deOONOnr0qKqqqkzHSnIAAIAJkVrK6HA4DMlBJHk8Ho0ePVqPPvqobDabpk2bpn379umBBx74diQH/3rT1UodPNjqMPwakTHC6hACyjv1VKtDCOrNhharQwjqn/9PsdUhBPTYH/9kdQhBtb6/1+oQgppy0RSrQwho95YPrA4hqHPOucjqEAI6erRXn3yyy+ow+sWoUaNks9nU0dFhON7R0aGMjAy/12RmZmrQoEGy2Wy+YxMmTFB7e7t6e3uVnJxsqm/mHAAAYEJ48w1CrzokJydr2rRpamho8B3zeDxqaGhQcbH/P2RmzJih3bt3y+Px+I7t2rVLmZmZphMDieQAAABzwk0M+jAk4XK5tGrVKj355JPavn27brjhBnV3d/tWL8ybN09LlizxnX/DDTfo008/1YIFC7Rr1y5t2LBBy5YtU3l5eUj9Ru2wAgAA8W7OnDk6cOCAKisr1d7ervz8fNXX1/smKba2tiox8R9/5+fk5OiVV17RokWLdM455yg7O1sLFizQLbfcElK/JAcAAJhhxV2QJFVUVKiiosLvc42NjScdKy4u1ltvvdWnvk4gOQAAwIR42pWROQcAAMCAygEAACZYNKpgCZIDAABMiNRNkGIBwwoAAMCAygEAACbEU+WA5AAAABNIDgAAgAFL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\n"},"metadata":{}}]},{"cell_type":"code","source":["bone()\n","pcolor(som.distance_map().T)\n","colorbar() #gives legend\n","\n","markers = ['o', 's']                     # if the observation is fraud then red circular color or else green square\n","colors = ['r', 'g']\n","for i, x in enumerate(X):\n","    w = som.winner(x)\n","    plot(w[0] + 0.5,\n","         w[1] + 0.5,\n","         markers[y[i]],\n","         markeredgecolor = colors[y[i]],\n","         markerfacecolor = 'None',\n","         markersize = 10,\n","         markeredgewidth = 2)\n","show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":435},"id":"JlkYiBVwQH3B","executionInfo":{"status":"ok","timestamp":1698764461191,"user_tz":-330,"elapsed":1651,"user":{"displayName":"akhila mundru","userId":"07860496523298893899"}},"outputId":"298cdcc0-9360-46dd-fc77-80c21c38acf1"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMW5Q1lfIKkwPDJsotzPea/"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}